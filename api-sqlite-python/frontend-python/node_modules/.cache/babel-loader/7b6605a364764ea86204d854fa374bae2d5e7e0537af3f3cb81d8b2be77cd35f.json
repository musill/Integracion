{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Estudiantes=()=>{const[estudiantes,setEstudiantes]=useState([]);// Estado para almacenar los estudiantes\nconst[formData,setFormData]=useState({id:\"\",nombre:\"\"});// Estado para el formulario\nconst apiBaseUrl=\"http://127.0.0.1:8000\";// URL base del backend\n// Obtener estudiantes desde la base de datos\nconst fetchEstudiantes=async()=>{try{const response=await fetch(`${apiBaseUrl}/estudiantes/`);// Solicitud GET al backend\nif(response.ok){const data=await response.json();// Convertir la respuesta a JSON\nsetEstudiantes(data);// Actualizar el estado con los datos obtenidos\n}else{console.error(\"Error al obtener los estudiantes\");}}catch(error){console.error(\"Error de conexión:\",error);}};// Manejar cambios en el formulario\nconst handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};// Crear estudiante\nconst handleSubmit=async e=>{e.preventDefault();try{const response=await fetch(`${apiBaseUrl}/estudiantes/`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(formData)});if(response.ok){setFormData({id:\"\",nombre:\"\"});// Limpiar el formulario\nfetchEstudiantes();// Actualizar la tabla\n}else{console.error(\"Error al crear el estudiante\");}}catch(error){console.error(\"Error de conexión:\",error);}};// Eliminar estudiante\nconst deleteEstudiante=async id=>{try{const response=await fetch(`${apiBaseUrl}/estudiantes/${id}`,{method:\"DELETE\"});if(response.ok){fetchEstudiantes();// Actualizar la tabla\n}else{console.error(\"Error al eliminar el estudiante\");}}catch(error){console.error(\"Error de conexión:\",error);}};// Actualizar estudiante\nconst updateEstudiante=async id=>{const estudiante=estudiantes.find(est=>est.id===id);if(estudiante){try{const response=await fetch(`${apiBaseUrl}/estudiantes/${id}`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(estudiante)});if(response.ok){fetchEstudiantes();// Actualizar la tabla\n}else{console.error(\"Error al actualizar el estudiante\");}}catch(error){console.error(\"Error de conexión:\",error);}}};// Ejecutar fetchEstudiantes al cargar el componente\nuseEffect(()=>{fetchEstudiantes();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Estudiantes\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"id\",placeholder:\"C\\xE9dula\",value:formData.id,onChange:handleChange,maxLength:10,onInput:e=>{e.target.value=e.target.value.replace(/[^0-9]/g,\"\");// Solo números\n},required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"nombre\",placeholder:\"Nombres completos\",value:formData.nombre,onChange:handleChange,maxLength:50,onInput:e=>{e.target.value=e.target.value.replace(/[^a-zA-ZñÑ\\s]/g,\"\");// Solo letras y espacios\n},required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Crear\"})]}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"C\\xE9dula\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Nombre\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Acciones\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:estudiantes.map(est=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:est.id,readOnly:true,style:{border:\"none\",background:\"transparent\"}})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:est.nombre,onChange:e=>{const updatedEstudiantes=estudiantes.map(item=>item.id===est.id?{...item,nombre:e.target.value}:item);setEstudiantes(updatedEstudiantes);}})}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateEstudiante(est.id),children:\"Actualizar\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteEstudiante(est.id),children:\"Eliminar\"})]})]},est.id))})]})]});};export default Estudiantes;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Estudiantes","estudiantes","setEstudiantes","formData","setFormData","id","nombre","apiBaseUrl","fetchEstudiantes","response","fetch","ok","data","json","console","error","handleChange","e","target","name","value","handleSubmit","preventDefault","method","headers","body","JSON","stringify","deleteEstudiante","updateEstudiante","estudiante","find","est","children","onSubmit","type","placeholder","onChange","maxLength","onInput","replace","required","map","readOnly","style","border","background","updatedEstudiantes","item","onClick"],"sources":["C:/Users/riky_/Documents/GitHub/Integracion/api-sqlite-python/frontend-python/src/components/Estudiantes.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Estudiantes = () => {\r\n  const [estudiantes, setEstudiantes] = useState([]); // Estado para almacenar los estudiantes\r\n  const [formData, setFormData] = useState({ id: \"\", nombre: \"\" }); // Estado para el formulario\r\n\r\n  const apiBaseUrl = \"http://127.0.0.1:8000\"; // URL base del backend\r\n\r\n  // Obtener estudiantes desde la base de datos\r\n  const fetchEstudiantes = async () => {\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/estudiantes/`); // Solicitud GET al backend\r\n      if (response.ok) {\r\n        const data = await response.json(); // Convertir la respuesta a JSON\r\n        setEstudiantes(data); // Actualizar el estado con los datos obtenidos\r\n      } else {\r\n        console.error(\"Error al obtener los estudiantes\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error de conexión:\", error);\r\n    }\r\n  };\r\n\r\n  // Manejar cambios en el formulario\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Crear estudiante\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/estudiantes/`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      if (response.ok) {\r\n        setFormData({ id: \"\", nombre: \"\" }); // Limpiar el formulario\r\n        fetchEstudiantes(); // Actualizar la tabla\r\n      } else {\r\n        console.error(\"Error al crear el estudiante\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error de conexión:\", error);\r\n    }\r\n  };\r\n\r\n  // Eliminar estudiante\r\n  const deleteEstudiante = async (id) => {\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/estudiantes/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (response.ok) {\r\n        fetchEstudiantes(); // Actualizar la tabla\r\n      } else {\r\n        console.error(\"Error al eliminar el estudiante\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error de conexión:\", error);\r\n    }\r\n  };\r\n\r\n  // Actualizar estudiante\r\n  const updateEstudiante = async (id) => {\r\n    const estudiante = estudiantes.find((est) => est.id === id);\r\n    if (estudiante) {\r\n      try {\r\n        const response = await fetch(`${apiBaseUrl}/estudiantes/${id}`, {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(estudiante),\r\n        });\r\n        if (response.ok) {\r\n          fetchEstudiantes(); // Actualizar la tabla\r\n        } else {\r\n          console.error(\"Error al actualizar el estudiante\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error de conexión:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Ejecutar fetchEstudiantes al cargar el componente\r\n  useEffect(() => {\r\n    fetchEstudiantes();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Estudiantes</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"id\"\r\n          placeholder=\"Cédula\"\r\n          value={formData.id}\r\n          onChange={handleChange}\r\n          maxLength={10}\r\n          onInput={(e) => {\r\n            e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); // Solo números\r\n          }}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"nombre\"\r\n          placeholder=\"Nombres completos\"\r\n          value={formData.nombre}\r\n          onChange={handleChange}\r\n          maxLength={50}\r\n          onInput={(e) => {\r\n            e.target.value = e.target.value.replace(/[^a-zA-ZñÑ\\s]/g, \"\"); // Solo letras y espacios\r\n          }}\r\n          required\r\n        />\r\n        <button type=\"submit\">Crear</button>\r\n      </form>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Cédula</th>\r\n            <th>Nombre</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {estudiantes.map((est) => (\r\n            <tr key={est.id}>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={est.id}\r\n                  readOnly\r\n                  style={{ border: \"none\", background: \"transparent\" }}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={est.nombre}\r\n                  onChange={(e) => {\r\n                    const updatedEstudiantes = estudiantes.map((item) =>\r\n                      item.id === est.id ? { ...item, nombre: e.target.value } : item\r\n                    );\r\n                    setEstudiantes(updatedEstudiantes);\r\n                  }}\r\n                />\r\n              </td>\r\n              <td>\r\n                <button onClick={() => updateEstudiante(est.id)}>Actualizar</button>\r\n                <button onClick={() => deleteEstudiante(est.id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Estudiantes;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAAE;AACpD,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,CAAEW,EAAE,CAAE,EAAE,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAC,CAAE;AAElE,KAAM,CAAAC,UAAU,CAAG,uBAAuB,CAAE;AAE5C;AACA,KAAM,CAAAC,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,UAAU,eAAe,CAAC,CAAE;AAC5D,GAAIE,QAAQ,CAACE,EAAE,CAAE,CACf,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAE;AACpCX,cAAc,CAACU,IAAI,CAAC,CAAE;AACxB,CAAC,IAAM,CACLE,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC,CACnD,CACF,CAAE,MAAOA,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CACF,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAIC,CAAC,EAAK,CAC1Bb,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAE,CAACc,CAAC,CAACC,MAAM,CAACC,IAAI,EAAGF,CAAC,CAACC,MAAM,CAACE,KAAM,CAAC,CAAC,CAC/D,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAJ,CAAC,EAAK,CAChCA,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,UAAU,eAAe,CAAE,CACzDgB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACxB,QAAQ,CAC/B,CAAC,CAAC,CACF,GAAIM,QAAQ,CAACE,EAAE,CAAE,CACfP,WAAW,CAAC,CAAEC,EAAE,CAAE,EAAE,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAC,CAAE;AACrCE,gBAAgB,CAAC,CAAC,CAAE;AACtB,CAAC,IAAM,CACLM,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC,CAC/C,CACF,CAAE,MAAOA,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CACF,CAAC,CAED;AACA,KAAM,CAAAa,gBAAgB,CAAG,KAAO,CAAAvB,EAAE,EAAK,CACrC,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,UAAU,gBAAgBF,EAAE,EAAE,CAAE,CAC9DkB,MAAM,CAAE,QACV,CAAC,CAAC,CACF,GAAId,QAAQ,CAACE,EAAE,CAAE,CACfH,gBAAgB,CAAC,CAAC,CAAE;AACtB,CAAC,IAAM,CACLM,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC,CAClD,CACF,CAAE,MAAOA,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CACF,CAAC,CAED;AACA,KAAM,CAAAc,gBAAgB,CAAG,KAAO,CAAAxB,EAAE,EAAK,CACrC,KAAM,CAAAyB,UAAU,CAAG7B,WAAW,CAAC8B,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAAC3B,EAAE,GAAKA,EAAE,CAAC,CAC3D,GAAIyB,UAAU,CAAE,CACd,GAAI,CACF,KAAM,CAAArB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,UAAU,gBAAgBF,EAAE,EAAE,CAAE,CAC9DkB,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACG,UAAU,CACjC,CAAC,CAAC,CACF,GAAIrB,QAAQ,CAACE,EAAE,CAAE,CACfH,gBAAgB,CAAC,CAAC,CAAE;AACtB,CAAC,IAAM,CACLM,OAAO,CAACC,KAAK,CAAC,mCAAmC,CAAC,CACpD,CACF,CAAE,MAAOA,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CACF,CACF,CAAC,CAED;AACApB,SAAS,CAAC,IAAM,CACda,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACET,KAAA,QAAAkC,QAAA,eACEpC,IAAA,OAAAoC,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBlC,KAAA,SAAMmC,QAAQ,CAAEb,YAAa,CAAAY,QAAA,eAC3BpC,IAAA,UACEsC,IAAI,CAAC,MAAM,CACXhB,IAAI,CAAC,IAAI,CACTiB,WAAW,CAAC,WAAQ,CACpBhB,KAAK,CAAEjB,QAAQ,CAACE,EAAG,CACnBgC,QAAQ,CAAErB,YAAa,CACvBsB,SAAS,CAAE,EAAG,CACdC,OAAO,CAAGtB,CAAC,EAAK,CACdA,CAAC,CAACC,MAAM,CAACE,KAAK,CAAGH,CAAC,CAACC,MAAM,CAACE,KAAK,CAACoB,OAAO,CAAC,SAAS,CAAE,EAAE,CAAC,CAAE;AAC1D,CAAE,CACFC,QAAQ,MACT,CAAC,cACF5C,IAAA,UACEsC,IAAI,CAAC,MAAM,CACXhB,IAAI,CAAC,QAAQ,CACbiB,WAAW,CAAC,mBAAmB,CAC/BhB,KAAK,CAAEjB,QAAQ,CAACG,MAAO,CACvB+B,QAAQ,CAAErB,YAAa,CACvBsB,SAAS,CAAE,EAAG,CACdC,OAAO,CAAGtB,CAAC,EAAK,CACdA,CAAC,CAACC,MAAM,CAACE,KAAK,CAAGH,CAAC,CAACC,MAAM,CAACE,KAAK,CAACoB,OAAO,CAAC,gBAAgB,CAAE,EAAE,CAAC,CAAE;AACjE,CAAE,CACFC,QAAQ,MACT,CAAC,cACF5C,IAAA,WAAQsC,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,cACPlC,KAAA,UAAAkC,QAAA,eACEpC,IAAA,UAAAoC,QAAA,cACElC,KAAA,OAAAkC,QAAA,eACEpC,IAAA,OAAAoC,QAAA,CAAI,WAAM,CAAI,CAAC,cACfpC,IAAA,OAAAoC,QAAA,CAAI,QAAM,CAAI,CAAC,cACfpC,IAAA,OAAAoC,QAAA,CAAI,UAAQ,CAAI,CAAC,EACf,CAAC,CACA,CAAC,cACRpC,IAAA,UAAAoC,QAAA,CACGhC,WAAW,CAACyC,GAAG,CAAEV,GAAG,eACnBjC,KAAA,OAAAkC,QAAA,eACEpC,IAAA,OAAAoC,QAAA,cACEpC,IAAA,UACEsC,IAAI,CAAC,MAAM,CACXf,KAAK,CAAEY,GAAG,CAAC3B,EAAG,CACdsC,QAAQ,MACRC,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAM,CAAEC,UAAU,CAAE,aAAc,CAAE,CACtD,CAAC,CACA,CAAC,cACLjD,IAAA,OAAAoC,QAAA,cACEpC,IAAA,UACEsC,IAAI,CAAC,MAAM,CACXf,KAAK,CAAEY,GAAG,CAAC1B,MAAO,CAClB+B,QAAQ,CAAGpB,CAAC,EAAK,CACf,KAAM,CAAA8B,kBAAkB,CAAG9C,WAAW,CAACyC,GAAG,CAAEM,IAAI,EAC9CA,IAAI,CAAC3C,EAAE,GAAK2B,GAAG,CAAC3B,EAAE,CAAG,CAAE,GAAG2C,IAAI,CAAE1C,MAAM,CAAEW,CAAC,CAACC,MAAM,CAACE,KAAM,CAAC,CAAG4B,IAC7D,CAAC,CACD9C,cAAc,CAAC6C,kBAAkB,CAAC,CACpC,CAAE,CACH,CAAC,CACA,CAAC,cACLhD,KAAA,OAAAkC,QAAA,eACEpC,IAAA,WAAQoD,OAAO,CAAEA,CAAA,GAAMpB,gBAAgB,CAACG,GAAG,CAAC3B,EAAE,CAAE,CAAA4B,QAAA,CAAC,YAAU,CAAQ,CAAC,cACpEpC,IAAA,WAAQoD,OAAO,CAAEA,CAAA,GAAMrB,gBAAgB,CAACI,GAAG,CAAC3B,EAAE,CAAE,CAAA4B,QAAA,CAAC,UAAQ,CAAQ,CAAC,EAChE,CAAC,GAxBED,GAAG,CAAC3B,EAyBT,CACL,CAAC,CACG,CAAC,EACH,CAAC,EACL,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}